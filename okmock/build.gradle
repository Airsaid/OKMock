plugins {
    id 'java-library'
    id 'maven-publish'
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
    withSourcesJar()
    withJavadocJar()
}

def isReleaseBuild = !version.endsWith('-SNAPSHOT')

dependencies {
    testImplementation 'junit:junit:4.13.2'
}

publishing {
    publications {
        release(MavenPublication) {
            groupId = 'com.airsaid'
            artifactId = 'okmock'
            version = '1.0.0'

            from components.java

            pom {
                name = 'OKMock'
                description = 'OKMock is a Java mock tool, used to quickly auto-fill field data.'
                url = 'https://github.com/Airsaid/OKMock'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'airsaid'
                        name = 'Airsaid'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/Airsaid/okmock.git'
                    developerConnection = 'scm:git:ssh://git@github.com/Airsaid/okmock.git'
                    url = 'https://github.com/Airsaid/OKMock'
                }
            }
        }
    }

    repositories {
        maven {
            url = isReleaseBuild
                    ? 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'
                    : 'https://oss.sonatype.org/content/repositories/snapshots/'
            credentials {
                username = project.hasProperty('SONATYPE_NEXUS_USERNAME') ? SONATYPE_NEXUS_USERNAME : ''
                password = project.hasProperty('SONATYPE_NEXUS_PASSWORD') ? SONATYPE_NEXUS_PASSWORD : ''
            }
        }
    }
}

if (isReleaseBuild) {
    apply plugin: 'signing'
    signing {
        required { gradle.taskGraph.hasTask("publish") }
        sign publishing.publications
    }
}

tasks.register('publishSnapshot').configure { task ->
    if (!isReleaseBuild) {
        task.dependsOn(tasks.getByName('publish'))
    }
}